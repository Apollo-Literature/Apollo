name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Java 21 and Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # 3. Build with Maven (skipping tests for faster builds)
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Set up gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # 5. Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 6. Configure Docker to use gcloud as a credential helper
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      # 7. Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          # Build the Docker image
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/apollo:latest .
          # Push the Docker image to Google Container Registry
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/apollo:latest

      # 8. Deploy to Google Cloud Run for both push and pull requests
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: apollo-service
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/apollo:latest
          region: us-central1
          env_vars: |
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
            SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}
            ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}